#N canvas 385 85 965 782 10;
#X obj 13 22 tgl 15 0 empty empty empty 17 7 0 10 -262144 -1 -1 0 1
;
#X obj 13 42 s onOff;
#X obj 78 548 dac~;
#X obj 79 112 r onOff;
#X floatatom 445 289 10 0 1000 0 - - -, f 10;
#N canvas 98 22 648 669 fft-analysis 0;
#X obj 35 589 *~;
#X obj 143 305 *~;
#X obj 158 150 *~;
#X obj 35 72 *~;
#X obj 76 527 *~;
#X obj 35 44 inlet~;
#X obj 35 528 *~;
#X obj 34 101 rfft~;
#X obj 35 558 rifft~;
#X obj 36 616 outlet~;
#X obj 119 149 *~;
#X obj 119 176 +~;
#X obj 165 278 r mask-level;
#X obj 100 422 /~;
#X obj 355 23 block~ 1024 4;
#X text 176 446 is signal power and "m" is mask.;
#X obj 131 332 -~;
#X obj 131 355 max~ 0;
#X obj 99 448 q8_sqrt~;
#X text 175 464 (zero if s < m).;
#X obj 144 256 tabreceive~ mask;
#X obj 76 72 tabreceive~ \$0-hann;
#X obj 69 590 tabreceive~ \$0-hann;
#N canvas 91 250 910 495 calculate-mask 0;
#X obj 125 379 inlet~;
#X msg 371 283 0;
#X msg 371 166 0;
#X obj 240 196 float;
#X obj 294 200 + 1;
#X obj 240 144 bang~;
#X obj 240 169 spigot;
#X floatatom 411 218 0 0 0 0 - - -;
#X obj 315 408 -~;
#X obj 371 258 sel 0;
#X obj 327 443 *~;
#X obj 293 443 +~;
#X floatatom 351 313 0 0 0 0 - - -;
#X obj 240 219 t f f;
#X obj 370 113 r make-mask;
#X obj 371 141 t b f;
#X obj 411 165 /;
#X text 483 212 number of;
#X text 491 227 frames;
#X floatatom 481 166 0 0 0 0 - - -;
#X obj 480 113 r window-msec;
#X obj 481 136 / 4;
#X text 521 133 hop size (analysis;
#X text 546 149 period) in msec;
#X obj 359 408 tabreceive~ mask;
#X obj 292 468 tabsend~ mask;
#X obj 371 218 <;
#X obj 235 258 expr 1/($f1+1);
#X text 134 17 calculate a mask using N msec of background noise;
#X text 43 354 current power (for each channel);
#X text 367 430 average the current power into the last mask to get
the new mask. The new value is weighted 1/n on the nth iteration.;
#X text 390 312 weight to average in new power to mask;
#X text 11 203 loop counting to desired;
#X text 78 219 number of frames;
#X text 72 39 This loops for "make-mask" milliseconds \, averaging
power in each channel over that amount of time. This is done by a moving
average whose weight is adjusted to average each new value equally
with each of the accumulating ones.;
#X connect 0 0 8 0;
#X connect 1 0 12 0;
#X connect 2 0 3 1;
#X connect 2 0 26 0;
#X connect 3 0 13 0;
#X connect 3 0 4 0;
#X connect 4 0 3 1;
#X connect 5 0 6 0;
#X connect 6 0 3 0;
#X connect 7 0 26 1;
#X connect 8 0 10 0;
#X connect 9 0 1 0;
#X connect 10 0 11 1;
#X connect 11 0 25 0;
#X connect 12 0 10 1;
#X connect 13 0 26 0;
#X connect 13 1 27 0;
#X connect 14 0 15 0;
#X connect 15 0 2 0;
#X connect 15 1 16 0;
#X connect 16 0 7 0;
#X connect 20 0 21 0;
#X connect 21 0 16 1;
#X connect 21 0 19 0;
#X connect 24 0 8 1;
#X connect 24 0 11 0;
#X connect 26 0 6 1;
#X connect 26 0 9 0;
#X connect 27 0 12 0;
#X restore 132 203 pd calculate-mask;
#X text 91 98 real Fourier transform;
#X obj 357 57 loadbang;
#X msg 357 80 \; pd dsp 1 \; window-size 1024;
#X text 193 355 ... but not less than zero;
#X text 101 561 real inverse Fourier transform;
#X text 196 498 normalize by 2/(3N) where N is window size;
#X text 168 332 current power ("s") minus level-adjusted mask ("m")
;
#X text 156 175 compute power (call it "s") in each channel;
#X obj 123 395 +~ 1e-20;
#X text 203 395 protect against division by zero;
#X text 179 426 compute sqrt((s-m)/s) where "s";
#X text 296 204 <- subwindow calculates noise mask;
#X obj 98 499 /~ 1536;
#X connect 0 0 9 0;
#X connect 1 0 16 1;
#X connect 2 0 11 1;
#X connect 3 0 7 0;
#X connect 4 0 8 1;
#X connect 5 0 3 0;
#X connect 6 0 8 0;
#X connect 7 0 6 0;
#X connect 7 0 10 0;
#X connect 7 0 10 1;
#X connect 7 1 4 0;
#X connect 7 1 2 0;
#X connect 7 1 2 1;
#X connect 8 0 0 0;
#X connect 10 0 11 0;
#X connect 11 0 16 0;
#X connect 11 0 23 0;
#X connect 11 0 32 0;
#X connect 12 0 1 1;
#X connect 13 0 18 0;
#X connect 16 0 17 0;
#X connect 17 0 13 0;
#X connect 18 0 36 0;
#X connect 20 0 1 0;
#X connect 21 0 3 1;
#X connect 22 0 0 1;
#X connect 25 0 26 0;
#X connect 32 0 13 1;
#X connect 36 0 6 1;
#X connect 36 0 4 1;
#X restore 78 443 pd fft-analysis;
#N canvas 0 110 565 454 hann-window 0;
#N canvas 0 22 450 300 (subpatch) 0;
#X array \$0-hann 1024 float 0;
#X coords 0 1 1023 0 300 100 1;
#X restore 82 311 graph;
#X obj 378 165 osc~;
#X obj 378 190 *~ -0.5;
#X obj 378 214 +~ 0.5;
#X obj 331 247 tabwrite~ \$0-hann;
#X obj 37 88 r window-size;
#X obj 38 173 /;
#X obj 127 142 samplerate~;
#X obj 38 251 s window-sec;
#X obj 177 204 swap;
#X obj 177 228 /;
#X obj 177 252 s window-hz;
#X obj 49 201 * 1000;
#X obj 49 228 s window-msec;
#X obj 38 115 t f b f;
#X msg 173 92 resize \$1;
#X obj 173 116 s \$0-hann;
#X obj 330 105 r window-hz;
#X msg 382 130 0;
#X obj 330 131 t f b;
#X text 15 8 calculate Hann window table (variable window size) and
constants window-hz (fundamental frequency of analysis) \, window-sec
and window-msec (analysis window size in seconds and msec).;
#X connect 1 0 2 0;
#X connect 2 0 3 0;
#X connect 3 0 4 0;
#X connect 5 0 14 0;
#X connect 6 0 8 0;
#X connect 6 0 12 0;
#X connect 7 0 6 1;
#X connect 7 0 9 1;
#X connect 9 0 10 0;
#X connect 9 1 10 1;
#X connect 10 0 11 0;
#X connect 12 0 13 0;
#X connect 14 0 6 0;
#X connect 14 0 9 0;
#X connect 14 1 7 0;
#X connect 14 2 15 0;
#X connect 15 0 16 0;
#X connect 17 0 19 0;
#X connect 18 0 1 1;
#X connect 19 0 1 0;
#X connect 19 1 4 0;
#X connect 19 1 18 0;
#X restore 474 380 pd hann-window;
#X obj 445 314 s mask-level;
#X text 522 239 off;
#X msg 505 262 0;
#X text 586 213 calculate noise mask;
#X msg 605 240 \; make-mask 2000;
#N canvas 806 123 648 669 fft-analysis 0;
#X obj 35 589 *~;
#X obj 143 305 *~;
#X obj 158 150 *~;
#X obj 35 72 *~;
#X obj 76 527 *~;
#X obj 35 44 inlet~;
#X obj 35 528 *~;
#X obj 34 101 rfft~;
#X obj 35 558 rifft~;
#X obj 36 616 outlet~;
#X obj 119 149 *~;
#X obj 119 176 +~;
#X obj 165 278 r mask-level;
#X obj 100 422 /~;
#X obj 355 23 block~ 1024 4;
#X text 176 446 is signal power and "m" is mask.;
#X obj 131 332 -~;
#X obj 131 355 max~ 0;
#X obj 99 448 q8_sqrt~;
#X text 175 464 (zero if s < m).;
#X obj 76 72 tabreceive~ \$0-hann;
#X obj 69 590 tabreceive~ \$0-hann;
#N canvas 91 250 910 495 calculate-mask 0;
#X obj 125 379 inlet~;
#X msg 371 283 0;
#X msg 371 166 0;
#X obj 240 196 float;
#X obj 294 200 + 1;
#X obj 240 144 bang~;
#X obj 240 169 spigot;
#X floatatom 411 218 0 0 0 0 - - -;
#X obj 315 408 -~;
#X obj 371 258 sel 0;
#X obj 327 443 *~;
#X obj 293 443 +~;
#X floatatom 351 313 0 0 0 0 - - -;
#X obj 240 219 t f f;
#X obj 370 113 r make-mask;
#X obj 371 141 t b f;
#X obj 411 165 /;
#X text 483 212 number of;
#X text 491 227 frames;
#X floatatom 481 166 0 0 0 0 - - -;
#X obj 480 113 r window-msec;
#X obj 481 136 / 4;
#X text 521 133 hop size (analysis;
#X text 546 149 period) in msec;
#X obj 359 408 tabreceive~ mask;
#X obj 292 468 tabsend~ mask;
#X obj 371 218 <;
#X obj 235 258 expr 1/($f1+1);
#X text 134 17 calculate a mask using N msec of background noise;
#X text 43 354 current power (for each channel);
#X text 367 430 average the current power into the last mask to get
the new mask. The new value is weighted 1/n on the nth iteration.;
#X text 390 312 weight to average in new power to mask;
#X text 11 203 loop counting to desired;
#X text 78 219 number of frames;
#X text 72 39 This loops for "make-mask" milliseconds \, averaging
power in each channel over that amount of time. This is done by a moving
average whose weight is adjusted to average each new value equally
with each of the accumulating ones.;
#X connect 0 0 8 0;
#X connect 1 0 12 0;
#X connect 2 0 3 1;
#X connect 2 0 26 0;
#X connect 3 0 13 0;
#X connect 3 0 4 0;
#X connect 4 0 3 1;
#X connect 5 0 6 0;
#X connect 6 0 3 0;
#X connect 7 0 26 1;
#X connect 8 0 10 0;
#X connect 9 0 1 0;
#X connect 10 0 11 1;
#X connect 11 0 25 0;
#X connect 12 0 10 1;
#X connect 13 0 26 0;
#X connect 13 1 27 0;
#X connect 14 0 15 0;
#X connect 15 0 2 0;
#X connect 15 1 16 0;
#X connect 16 0 7 0;
#X connect 20 0 21 0;
#X connect 21 0 16 1;
#X connect 21 0 19 0;
#X connect 24 0 8 1;
#X connect 24 0 11 0;
#X connect 26 0 6 1;
#X connect 26 0 9 0;
#X connect 27 0 12 0;
#X restore 132 203 pd calculate-mask;
#X text 91 98 real Fourier transform;
#X obj 357 57 loadbang;
#X msg 357 80 \; pd dsp 1 \; window-size 1024;
#X text 193 355 ... but not less than zero;
#X text 101 561 real inverse Fourier transform;
#X text 196 498 normalize by 2/(3N) where N is window size;
#X text 168 332 current power ("s") minus level-adjusted mask ("m")
;
#X text 156 175 compute power (call it "s") in each channel;
#X obj 123 395 +~ 1e-20;
#X text 203 395 protect against division by zero;
#X text 179 426 compute sqrt((s-m)/s) where "s";
#X text 296 204 <- subwindow calculates noise mask;
#X obj 98 499 /~ 1536;
#X obj 144 256 tabreceive~ mask;
#X connect 0 0 9 0;
#X connect 1 0 16 1;
#X connect 2 0 11 1;
#X connect 3 0 7 0;
#X connect 4 0 8 1;
#X connect 5 0 3 0;
#X connect 6 0 8 0;
#X connect 7 0 6 0;
#X connect 7 0 10 0;
#X connect 7 0 10 1;
#X connect 7 1 4 0;
#X connect 7 1 2 0;
#X connect 7 1 2 1;
#X connect 8 0 0 0;
#X connect 10 0 11 0;
#X connect 11 0 16 0;
#X connect 11 0 22 0;
#X connect 11 0 31 0;
#X connect 12 0 1 1;
#X connect 13 0 18 0;
#X connect 16 0 17 0;
#X connect 17 0 13 0;
#X connect 18 0 35 0;
#X connect 20 0 3 1;
#X connect 21 0 0 1;
#X connect 24 0 25 0;
#X connect 31 0 13 1;
#X connect 35 0 6 1;
#X connect 35 0 4 1;
#X connect 36 0 1 0;
#X restore 198 443 pd fft-analysis;
#X obj 505 63 bng 15 250 50 0 empty empty empty 17 7 0 10 -262144 -1
-1;
#X obj 405 177 env~;
#X floatatom 405 199 5 0 0 0 - - -, f 5;
#X obj 445 261 *;
#N canvas 0 22 592 442 mask-table 0;
#N canvas 0 22 450 300 (subpatch) 0;
#X array mask 512 float 1;
#A 0 401.575 401.575 401.575 401.575 401.575 401.575 401.575 401.575
401.575 401.575 401.575 401.575 401.575 401.575 401.575 401.575 401.575
401.575 401.575 401.575 401.575 401.575 401.575 401.575 401.575 401.575
401.575 401.575 401.575 401.575 401.575 401.575 401.575 401.575 401.575
401.575 401.575 401.575 401.575 401.575 401.575 401.575 401.575 401.575
401.575 401.575 401.575 401.575 401.575 401.575 401.575 401.575 401.575
401.575 401.575 401.575 401.575 401.575 401.575 401.575 401.575 401.575
401.575 401.575 401.575 401.575 401.575 401.575 401.575 401.575 401.575
401.575 401.575 401.575 401.575 401.575 401.575 401.575 401.575 401.575
401.575 401.575 401.575 401.575 401.575 401.575 401.575 401.575 401.575
401.575 401.575 401.575 401.575 401.575 401.575 401.575 401.575 401.575
401.575 401.575 401.575 401.575 401.575 401.575 401.575 401.575 401.575
401.575 401.575 401.575 401.575 401.575 401.575 401.575 401.575 401.575
401.575 401.575 401.575 401.575 401.575 401.575 401.575 401.575 401.575
401.575 401.575 401.575 401.575 401.575 401.575 401.575 401.575 401.575
401.575 401.575 401.575 401.575 401.575 401.575 401.575 401.575 401.575
401.575 401.575 401.575 401.575 401.575 401.575 401.575 401.575 401.575
401.575 401.575 401.575 401.575 401.575 401.575 401.575 401.575 401.575
401.575 401.575 401.575 401.575 401.575 401.575 401.575 401.575 401.575
401.575 401.575 401.575 401.575 401.575 401.575 401.575 401.575 401.575
401.575 401.575 401.575 401.575 401.575 401.575 401.575 401.575 401.575
401.575 401.575 401.575 401.575 401.575 401.575 401.575 401.575 401.575
401.575 401.575 401.575 401.575 401.575 401.575 401.575 401.575 401.575
401.575 401.575 401.575 401.575 401.575 401.575 401.575 401.575 401.575
401.575 401.575 401.575 401.575 401.575 401.575 401.575 401.575 401.575
401.575 401.575 401.575 401.575 401.575 401.575 401.575 401.575 401.575
401.575 401.575 401.575 401.575 401.575 401.575 401.575 401.575 401.575
401.575 401.575 401.575 401.575 401.575 401.575 401.575 401.575 401.575
401.575 401.575 401.575 401.575 401.575 401.575 401.575 401.575 401.575
401.575 401.575 401.575 401.575 401.575 401.575 401.575 401.575 401.575
401.575 401.575 401.575 401.575 401.575 401.575 401.575 401.575 401.575
401.575 401.575 401.575 401.575 401.575 401.575 401.575 401.575 401.575
401.575 401.575 401.575 401.575 401.575 401.575 401.575 401.575 401.575
401.575 401.575 401.575 401.575 401.575 401.575 401.575 401.575 401.575
401.575 401.575 401.575 401.575 401.575 401.575 401.575 401.575 401.575
401.575 401.575 401.575 401.575 401.575 401.575 401.575 401.575 401.575
401.575 401.575 401.575 401.575 401.575 401.575 401.575 401.575 401.575
401.575 401.575 401.575 401.575 401.575 401.575 401.575 401.575 401.575
401.575 401.575 401.575 401.575 401.575 401.575 401.575 401.575 401.575
401.575 401.575 401.575 401.575 401.575 401.575 401.575 401.575 401.575
401.575 401.575 401.575 401.575 401.575 401.575 401.575 401.575 401.575
401.575 401.575 401.575 401.575 401.575 401.575 401.575 401.575 401.575
401.575 401.575 401.575 401.575 401.575 401.575 401.575 401.575 401.575
401.575 401.575 401.575 401.575 401.575 401.575 401.575 401.575 401.575
401.575 401.575 401.575 401.575 401.575 401.575 401.575 401.575 401.575
401.575 401.575 401.575 401.575 401.575 401.575 401.575 401.575 401.575
401.575 401.575 401.575 401.575 401.575 401.575 401.575 401.575 401.575
401.575 401.575 401.575 401.575 401.575 401.575 401.575 401.575 401.575
401.575 401.575 401.575 401.575 401.575 401.575 401.575 401.575 401.575
401.575 401.575 401.575 401.575 401.575 401.575 401.575 401.575 401.575
401.575 401.575 401.575 401.575 401.575 401.575 401.575 401.575 401.575
401.575 401.575 401.575 401.575 401.575 401.575 401.575 401.575 401.575
401.575 401.575 401.575 401.575 401.575 401.575 401.575 401.575 401.575
401.575 401.575 401.575 401.575 401.575 401.575 401.575 401.575 401.575
401.575 401.575 401.575 401.575 401.575 401.575 401.575 401.575 401.575
401.575 401.575 401.575 401.575 401.575 401.575 401.575 401.575 401.575
401.575 401.575 401.575 401.575 401.575 401.575 401.575 401.575 401.575
;
#X coords 0 500 511 0 400 300 1 0 0;
#X restore 100 71 graph;
#X text 22 -1 This table (1002-mask) is the average power measured
in each channel of the spectrum \, presumed to represent the noise
floor.;
#X restore 474 402 pd mask-table k;
#X obj 633 370 s mask;
#X msg 685 341 const 499;
#X msg 633 341 const 1;
#X msg 561 285 \; mask 0 0 0.8 0 1 0 0 0 1 0 0 0.7 0 0 0 1 0 0 0.5
0 0 0 0 1 0 0 0 0 0 0 0 0 1 0 0 0 0.4 0 0 0 0 0 0 0 1 0 0 0 1;
#X obj 398 464 delwrite~ d1 64;
#X obj 78 396 -~;
#X obj 198 398 -~;
#X obj 109 380 delread~ d1;
#X obj 229 381 delread~ d1;
#X floatatom 109 359 5 0 0 0 - - -, f 5;
#X floatatom 229 361 5 0 0 0 - - -, f 5;
#X obj 109 337 / 100;
#X obj 229 339 wrap 0;
#X obj 229 317 / 10;
#X obj 109 315 r fibi;
#X obj 229 296 r fibi;
#X obj 400 100 s fibi;
#X msg 758 340 const 250;
#X obj 744 431 hsl 128 15 0 500 0 1 empty empty empty -2 -8 0 10 -262144
-1 -1 10200 1;
#X msg 711 380 const \$1;
#X obj 405 236 / 1000;
#X obj 144 664 writesf~ 2;
#X obj 211 474 r onOff;
#X obj 211 520 sel 1 0;
#X msg 211 563 start;
#X msg 253 563 stop;
#X obj 211 543 t b b;
#X msg 263 592 open Mist_form_wip2.wav;
#X obj 395 368 *~ 0.5;
#X obj 352 368 *~ 0.5;
#X obj 352 390 +~;
#X obj 352 439 clip~ -0.9 0.9;
#N canvas 0 22 600 421 sequence 0;
#X obj 48 110 sel 1;
#X obj 49 142 bng 15 250 50 0 empty empty empty 17 7 0 10 -262144 -1
-1;
#X obj 49 170 int 1;
#X obj 49 201 t f b f;
#X obj 49 229 int 0;
#X obj 49 260 +;
#X floatatom 93 282 10 0 0 0 - - -, f 10;
#X obj 49 282 s fib;
#X obj 76 131 r fib;
#X text 134 136 reset;
#X msg 136 153 1;
#X obj 48 45 inlet;
#X obj 93 313 outlet;
#X obj 136 47 inlet;
#X connect 0 0 1 0;
#X connect 1 0 2 0;
#X connect 2 0 3 0;
#X connect 3 0 4 1;
#X connect 3 1 4 0;
#X connect 3 2 5 1;
#X connect 4 0 5 0;
#X connect 4 0 6 0;
#X connect 5 0 7 0;
#X connect 6 0 12 0;
#X connect 8 0 2 1;
#X connect 10 0 4 1;
#X connect 10 0 2 0;
#X connect 11 0 0 0;
#X connect 13 0 10 0;
#X restore 400 78 pd sequence;
#X obj 400 56 r onOff;
#X obj 460 236 r fibi;
#N canvas 0 22 752 592 audio 0;
#X obj 121 114 inlet;
#X obj 49 538 outlet~;
#X obj 170 539 outlet~;
#X obj 52 421 tabread4~ fileL;
#X obj 52 284 phasor~;
#X floatatom 7 188 10 0 0 0 - - -, f 10;
#X msg 121 256 0;
#X obj 171 421 tabread4~ fileR;
#X obj 7 151 r playbackRate;
#X obj 52 342 *~;
#X obj 94 325 r fileLenSamps;
#X obj 52 228 f;
#X obj 121 167 sel 1 0;
#X msg 140 223 0;
#X obj 503 202 soundfiler;
#X floatatom 503 262 12 0 0 0 - - -, f 12;
#X obj 503 234 / 44100;
#N canvas 552 305 925 542 arrays 0;
#N canvas 0 22 450 278 (subpatch) 0;
#X array fileL 4e+06 float 0;
#X coords 0 1 4e+06 -1 200 140 1 0 0;
#X restore 97 0 graph;
#N canvas 0 22 450 278 (subpatch) 0;
#X array fileR 4e+06 float 0;
#X coords 0 1 4e+06 -1 200 140 1 0 0;
#X restore 108 240 graph;
#X restore 606 77 pd arrays;
#X obj 555 234 s fileLenSamps;
#X obj 617 269 r fileLenSamps;
#X obj 617 319 s playbackRate;
#X obj 617 293 expr 44100 / $f1;
#X obj 486 102 loadbang;
#X msg 486 126 read -resize Mist_form_wip.wav fileL fileR;
#X obj 412 143 bng 15 250 50 0 empty empty empty 17 7 0 10 -262144
-1 -1;
#X obj 429 99 sel 0;
#X obj 429 78 r onOff;
#X msg 429 162 read -resize Mist_form_wip2.wav fileL fileR;
#X obj 429 121 del 3000;
#X obj 529 26 bng 15 250 50 0 empty empty empty 17 7 0 10 -262144 -1
-1;
#X obj 283 317 tgl 15 0 empty empty empty 17 7 0 10 -262144 -1 -1 1
1;
#X obj 283 359 snapshot~;
#X obj 283 418 /;
#X floatatom 283 440 10 0 0 0 - - -, f 10;
#X obj 373 483 hsl 195 15 0 1 0 1 empty empty empty -2 -8 0 10 -262144
-1 -1 0 1;
#X text 369 500 Playback position;
#X obj 311 315 loadbang;
#X obj 283 481 s playback1;
#X obj 283 337 metro 1;
#X obj 311 401 r fileLenSamps;
#X text 273 69 after first play this swaps to the new recording to
preserve the original ......for now;
#X text 270 166 need to work outhow long exactly it takes to bounce.
and prevent playback stoping until its done;
#X text 550 25 reset buffer;
#X connect 0 0 12 0;
#X connect 3 0 1 0;
#X connect 4 0 9 0;
#X connect 5 0 11 1;
#X connect 6 0 4 1;
#X connect 7 0 2 0;
#X connect 8 0 5 0;
#X connect 9 0 3 0;
#X connect 9 0 7 0;
#X connect 9 0 31 0;
#X connect 10 0 9 1;
#X connect 11 0 4 0;
#X connect 12 0 11 0;
#X connect 12 0 6 0;
#X connect 12 1 13 0;
#X connect 13 0 4 0;
#X connect 14 0 16 0;
#X connect 14 0 18 0;
#X connect 16 0 15 0;
#X connect 19 0 21 0;
#X connect 21 0 20 0;
#X connect 22 0 23 0;
#X connect 23 0 14 0;
#X connect 24 0 27 0;
#X connect 25 0 28 0;
#X connect 26 0 25 0;
#X connect 27 0 14 0;
#X connect 28 0 24 0;
#X connect 29 0 23 0;
#X connect 30 0 38 0;
#X connect 31 0 32 0;
#X connect 32 0 33 0;
#X connect 33 0 34 0;
#X connect 33 0 37 0;
#X connect 36 0 30 0;
#X connect 38 0 31 0;
#X connect 39 0 32 1;
#X restore 79 134 pd audio;
#N canvas 736 297 481 385 Skip 0;
#X obj 9 16 inlet~;
#X obj 20 287 s playback;
#X obj 9 43 env~;
#X floatatom 9 69 5 0 0 0 - - -, f 5;
#X obj 9 185 bng 15 250 50 0 empty empty empty 17 7 0 10 -262144 -1
-1;
#X obj 9 123 sel 1;
#X obj 9 98 > 92;
#X floatatom 48 69 5 0 0 0 - - -, f 5;
#X obj 88 177 t b b;
#X msg 48 43 88;
#X msg 77 43 95;
#X obj 88 201 f;
#X obj 88 266 +;
#X floatatom 88 289 10 0 0 0 - - -, f 10;
#X floatatom 115 266 10 0 0 0 - - -, f 10;
#X obj 115 223 - 5;
#X obj 133 177 r playback1;
#X obj 115 201 random 10;
#X obj 115 245 / 1000;
#X obj 273 89 inlet;
#X text 315 90 Threshold;
#X obj 273 176 threshold~ 100 100;
#X obj 273 203 bng 15 250 50 0 empty empty empty 17 7 0 10 -262144
-1 -1;
#X floatatom 273 115 5 0 0 0 - - -, f 5;
#X obj 379 201 bng 15 250 50 0 empty empty empty 17 7 0 10 -262144
-1 -1;
#X msg 273 143 set \$1 100 \$1 100;
#X msg 20 255 0;
#X text 54 123 old way;
#X text 388 144 new way;
#X connect 0 0 2 0;
#X connect 2 0 3 0;
#X connect 3 0 6 0;
#X connect 3 0 21 0;
#X connect 5 0 4 0;
#X connect 6 0 5 0;
#X connect 7 0 6 1;
#X connect 8 0 11 0;
#X connect 8 1 17 0;
#X connect 9 0 7 0;
#X connect 10 0 7 0;
#X connect 11 0 12 0;
#X connect 12 0 13 0;
#X connect 12 0 1 0;
#X connect 15 0 18 0;
#X connect 16 0 11 1;
#X connect 17 0 15 0;
#X connect 18 0 14 0;
#X connect 18 0 12 1;
#X connect 19 0 23 0;
#X connect 21 0 22 0;
#X connect 21 1 24 0;
#X connect 22 0 8 0;
#X connect 23 0 25 0;
#X connect 25 0 21 0;
#X connect 26 0 1 0;
#X restore 588 83 pd Skip;
#X text 637 85 to be implimented;
#N canvas 0 22 450 300 noise 0;
#X obj 169 161 *~;
#X obj 158 74 noise~;
#X obj 191 135 dbtorms;
#X floatatom 190 117 5 0 70 0 - - -, f 5;
#X obj 110 74 r onOff;
#X obj 158 117 *~;
#X obj 208 73 r fibi;
#X obj 169 183 outlet~;
#X obj 189 98 clip 0 62;
#X connect 0 0 7 0;
#X connect 1 0 5 0;
#X connect 2 0 0 1;
#X connect 3 0 2 0;
#X connect 4 0 5 1;
#X connect 5 0 0 0;
#X connect 6 0 8 0;
#X connect 8 0 3 0;
#X restore 397 402 pd noise;
#X text 446 432 adds too much distrotion \, alter to be more subtle
or remove;
#X text 229 402 change to vd~ for pitch shifting?;
#X text 309 72 need to add randomness;
#X obj 211 496 spigot;
#X obj 261 496 tgl 15 0 empty empty empty 17 7 0 10 -262144 -1 -1 0
1;
#X text 279 496 keep off till new parts implimented;
#X connect 0 0 1 0;
#X connect 3 0 53 0;
#X connect 4 0 7 0;
#X connect 5 0 2 0;
#X connect 5 0 39 0;
#X connect 9 0 4 0;
#X connect 12 0 2 1;
#X connect 12 0 39 1;
#X connect 13 0 9 0;
#X connect 13 0 50 1;
#X connect 14 0 15 0;
#X connect 15 0 38 0;
#X connect 16 0 4 0;
#X connect 19 0 18 0;
#X connect 20 0 18 0;
#X connect 23 0 5 0;
#X connect 24 0 12 0;
#X connect 25 0 23 1;
#X connect 26 0 24 1;
#X connect 27 0 25 0;
#X connect 28 0 26 0;
#X connect 29 0 27 0;
#X connect 30 0 28 0;
#X connect 31 0 30 0;
#X connect 32 0 29 0;
#X connect 33 0 31 0;
#X connect 35 0 18 0;
#X connect 36 0 37 0;
#X connect 37 0 18 0;
#X connect 38 0 16 0;
#X connect 40 0 60 0;
#X connect 41 0 44 0;
#X connect 41 1 43 0;
#X connect 42 0 39 0;
#X connect 43 0 39 0;
#X connect 44 0 42 0;
#X connect 44 1 45 0;
#X connect 45 0 39 0;
#X connect 46 0 48 1;
#X connect 47 0 48 0;
#X connect 48 0 49 0;
#X connect 49 0 22 0;
#X connect 50 0 34 0;
#X connect 51 0 50 0;
#X connect 52 0 16 1;
#X connect 53 0 23 0;
#X connect 53 0 47 0;
#X connect 53 0 14 0;
#X connect 53 1 24 0;
#X connect 53 1 46 0;
#X connect 56 0 22 0;
#X connect 60 0 41 0;
#X connect 61 0 60 1;
