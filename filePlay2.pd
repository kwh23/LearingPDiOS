#N canvas 530 42 965 782 10;
#X obj 13 22 tgl 15 0 empty empty empty 17 7 0 10 -262144 -1 -1 0 1
;
#X obj 13 68 s onOff;
#X obj 78 548 dac~;
#X obj 79 112 r onOff;
#X floatatom 445 289 10 0 1000 0 - - -;
#N canvas 98 22 648 669 fft-analysis 0;
#X obj 35 589 *~;
#X obj 143 305 *~;
#X obj 158 150 *~;
#X obj 35 72 *~;
#X obj 76 527 *~;
#X obj 35 44 inlet~;
#X obj 35 528 *~;
#X obj 34 101 rfft~;
#X obj 35 558 rifft~;
#X obj 36 616 outlet~;
#X obj 119 149 *~;
#X obj 119 176 +~;
#X obj 165 278 r mask-level;
#X obj 100 422 /~;
#X obj 355 23 block~ 1024 4;
#X text 176 446 is signal power and "m" is mask.;
#X obj 131 332 -~;
#X obj 131 355 max~ 0;
#X obj 99 448 q8_sqrt~;
#X text 175 464 (zero if s < m).;
#X obj 144 256 tabreceive~ mask;
#X obj 76 72 tabreceive~ \$0-hann;
#X obj 69 590 tabreceive~ \$0-hann;
#N canvas 91 250 910 495 calculate-mask 0;
#X obj 125 379 inlet~;
#X msg 371 283 0;
#X msg 371 166 0;
#X obj 240 196 float;
#X obj 294 200 + 1;
#X obj 240 144 bang~;
#X obj 240 169 spigot;
#X floatatom 411 218 0 0 0 0 - - -;
#X obj 315 408 -~;
#X obj 371 258 sel 0;
#X obj 327 443 *~;
#X obj 293 443 +~;
#X floatatom 351 313 0 0 0 0 - - -;
#X obj 240 219 t f f;
#X obj 370 113 r make-mask;
#X obj 371 141 t b f;
#X obj 411 165 /;
#X text 483 212 number of;
#X text 491 227 frames;
#X floatatom 481 166 0 0 0 0 - - -;
#X obj 480 113 r window-msec;
#X obj 481 136 / 4;
#X text 521 133 hop size (analysis;
#X text 546 149 period) in msec;
#X obj 359 408 tabreceive~ mask;
#X obj 292 468 tabsend~ mask;
#X obj 371 218 <;
#X obj 235 258 expr 1/($f1+1);
#X text 134 17 calculate a mask using N msec of background noise;
#X text 43 354 current power (for each channel);
#X text 367 430 average the current power into the last mask to get
the new mask. The new value is weighted 1/n on the nth iteration.;
#X text 390 312 weight to average in new power to mask;
#X text 11 203 loop counting to desired;
#X text 78 219 number of frames;
#X text 72 39 This loops for "make-mask" milliseconds \, averaging
power in each channel over that amount of time. This is done by a moving
average whose weight is adjusted to average each new value equally
with each of the accumulating ones.;
#X connect 0 0 8 0;
#X connect 1 0 12 0;
#X connect 2 0 3 1;
#X connect 2 0 26 0;
#X connect 3 0 13 0;
#X connect 3 0 4 0;
#X connect 4 0 3 1;
#X connect 5 0 6 0;
#X connect 6 0 3 0;
#X connect 7 0 26 1;
#X connect 8 0 10 0;
#X connect 9 0 1 0;
#X connect 10 0 11 1;
#X connect 11 0 25 0;
#X connect 12 0 10 1;
#X connect 13 0 26 0;
#X connect 13 1 27 0;
#X connect 14 0 15 0;
#X connect 15 0 2 0;
#X connect 15 1 16 0;
#X connect 16 0 7 0;
#X connect 20 0 21 0;
#X connect 21 0 16 1;
#X connect 21 0 19 0;
#X connect 24 0 8 1;
#X connect 24 0 11 0;
#X connect 26 0 6 1;
#X connect 26 0 9 0;
#X connect 27 0 12 0;
#X restore 132 203 pd calculate-mask;
#X text 91 98 real Fourier transform;
#X obj 357 57 r my_loadbang;
#X msg 357 80 \; pd dsp 1 \; window-size 1024;
#X text 193 355 ... but not less than zero;
#X text 101 561 real inverse Fourier transform;
#X text 196 498 normalize by 2/(3N) where N is window size;
#X text 168 332 current power ("s") minus level-adjusted mask ("m")
;
#X text 156 175 compute power (call it "s") in each channel;
#X obj 123 395 +~ 1e-20;
#X text 203 395 protect against division by zero;
#X text 179 426 compute sqrt((s-m)/s) where "s";
#X text 296 204 <- subwindow calculates noise mask;
#X obj 98 499 /~ 1536;
#X connect 0 0 9 0;
#X connect 1 0 16 1;
#X connect 2 0 11 1;
#X connect 3 0 7 0;
#X connect 4 0 8 1;
#X connect 5 0 3 0;
#X connect 6 0 8 0;
#X connect 7 0 6 0;
#X connect 7 0 10 0;
#X connect 7 0 10 1;
#X connect 7 1 4 0;
#X connect 7 1 2 0;
#X connect 7 1 2 1;
#X connect 8 0 0 0;
#X connect 10 0 11 0;
#X connect 11 0 16 0;
#X connect 11 0 23 0;
#X connect 11 0 32 0;
#X connect 12 0 1 1;
#X connect 13 0 18 0;
#X connect 16 0 17 0;
#X connect 17 0 13 0;
#X connect 18 0 36 0;
#X connect 20 0 1 0;
#X connect 21 0 3 1;
#X connect 22 0 0 1;
#X connect 25 0 26 0;
#X connect 32 0 13 1;
#X connect 36 0 6 1;
#X connect 36 0 4 1;
#X restore 78 443 pd fft-analysis;
#N canvas 0 110 565 454 hann-window 0;
#N canvas 0 22 450 300 (subpatch) 0;
#X array \$0-hann 1024 float 0;
#X coords 0 1 1023 0 300 100 1;
#X restore 82 311 graph;
#X obj 378 165 osc~;
#X obj 378 190 *~ -0.5;
#X obj 378 214 +~ 0.5;
#X obj 331 247 tabwrite~ \$0-hann;
#X obj 37 88 r window-size;
#X obj 38 173 /;
#X obj 127 142 samplerate~;
#X obj 38 251 s window-sec;
#X obj 177 204 swap;
#X obj 177 228 /;
#X obj 177 252 s window-hz;
#X obj 49 201 * 1000;
#X obj 49 228 s window-msec;
#X obj 38 115 t f b f;
#X msg 173 92 resize \$1;
#X obj 173 116 s \$0-hann;
#X obj 330 105 r window-hz;
#X msg 382 130 0;
#X obj 330 131 t f b;
#X text 15 8 calculate Hann window table (variable window size) and
constants window-hz (fundamental frequency of analysis) \, window-sec
and window-msec (analysis window size in seconds and msec).;
#X connect 1 0 2 0;
#X connect 2 0 3 0;
#X connect 3 0 4 0;
#X connect 5 0 14 0;
#X connect 6 0 8 0;
#X connect 6 0 12 0;
#X connect 7 0 6 1;
#X connect 7 0 9 1;
#X connect 9 0 10 0;
#X connect 9 1 10 1;
#X connect 10 0 11 0;
#X connect 12 0 13 0;
#X connect 14 0 6 0;
#X connect 14 0 9 0;
#X connect 14 1 7 0;
#X connect 14 2 15 0;
#X connect 15 0 16 0;
#X connect 17 0 19 0;
#X connect 18 0 1 1;
#X connect 19 0 1 0;
#X connect 19 1 4 0;
#X connect 19 1 18 0;
#X restore 474 380 pd hann-window;
#X obj 445 314 s mask-level;
#X text 522 239 off;
#X msg 505 262 0;
#X text 621 213 calculate noise mask;
#X msg 598 259 \; make-mask 2000;
#N canvas 806 123 648 669 fft-analysis 0;
#X obj 35 589 *~;
#X obj 143 305 *~;
#X obj 158 150 *~;
#X obj 35 72 *~;
#X obj 76 527 *~;
#X obj 35 44 inlet~;
#X obj 35 528 *~;
#X obj 34 101 rfft~;
#X obj 35 558 rifft~;
#X obj 36 616 outlet~;
#X obj 119 149 *~;
#X obj 119 176 +~;
#X obj 165 278 r mask-level;
#X obj 100 422 /~;
#X obj 355 23 block~ 1024 4;
#X text 176 446 is signal power and "m" is mask.;
#X obj 131 332 -~;
#X obj 131 355 max~ 0;
#X obj 99 448 q8_sqrt~;
#X text 175 464 (zero if s < m).;
#X obj 76 72 tabreceive~ \$0-hann;
#X obj 69 590 tabreceive~ \$0-hann;
#N canvas 258 340 910 495 calculate-mask 0;
#X obj 125 379 inlet~;
#X msg 371 283 0;
#X msg 371 166 0;
#X obj 240 196 float;
#X obj 294 200 + 1;
#X obj 240 144 bang~;
#X obj 240 169 spigot;
#X floatatom 411 218 0 0 0 0 - - -;
#X obj 315 408 -~;
#X obj 371 258 sel 0;
#X obj 327 443 *~;
#X obj 293 443 +~;
#X floatatom 351 313 0 0 0 0 - - -;
#X obj 240 219 t f f;
#X obj 370 113 r make-mask;
#X obj 371 141 t b f;
#X obj 411 165 /;
#X text 483 212 number of;
#X text 491 227 frames;
#X floatatom 481 166 0 0 0 0 - - -;
#X obj 480 113 r window-msec;
#X obj 481 136 / 4;
#X text 521 133 hop size (analysis;
#X text 546 149 period) in msec;
#X obj 359 408 tabreceive~ mask;
#X obj 292 468 tabsend~ mask;
#X obj 371 218 <;
#X obj 235 258 expr 1/($f1+1);
#X text 134 17 calculate a mask using N msec of background noise;
#X text 43 354 current power (for each channel);
#X text 367 430 average the current power into the last mask to get
the new mask. The new value is weighted 1/n on the nth iteration.;
#X text 390 312 weight to average in new power to mask;
#X text 11 203 loop counting to desired;
#X text 78 219 number of frames;
#X text 72 39 This loops for "make-mask" milliseconds \, averaging
power in each channel over that amount of time. This is done by a moving
average whose weight is adjusted to average each new value equally
with each of the accumulating ones.;
#X connect 0 0 8 0;
#X connect 1 0 12 0;
#X connect 2 0 3 1;
#X connect 2 0 26 0;
#X connect 3 0 13 0;
#X connect 3 0 4 0;
#X connect 4 0 3 1;
#X connect 5 0 6 0;
#X connect 6 0 3 0;
#X connect 7 0 26 1;
#X connect 8 0 10 0;
#X connect 9 0 1 0;
#X connect 10 0 11 1;
#X connect 11 0 25 0;
#X connect 12 0 10 1;
#X connect 13 0 26 0;
#X connect 13 1 27 0;
#X connect 14 0 15 0;
#X connect 15 0 2 0;
#X connect 15 1 16 0;
#X connect 16 0 7 0;
#X connect 20 0 21 0;
#X connect 21 0 16 1;
#X connect 21 0 19 0;
#X connect 24 0 8 1;
#X connect 24 0 11 0;
#X connect 26 0 6 1;
#X connect 26 0 9 0;
#X connect 27 0 12 0;
#X restore 132 203 pd calculate-mask;
#X text 91 98 real Fourier transform;
#X obj 357 57 r my_loadbang;
#X msg 357 80 \; pd dsp 1 \; window-size 1024;
#X text 193 355 ... but not less than zero;
#X text 101 561 real inverse Fourier transform;
#X text 196 498 normalize by 2/(3N) where N is window size;
#X text 168 332 current power ("s") minus level-adjusted mask ("m")
;
#X text 156 175 compute power (call it "s") in each channel;
#X obj 123 395 +~ 1e-20;
#X text 203 395 protect against division by zero;
#X text 179 426 compute sqrt((s-m)/s) where "s";
#X text 296 204 <- subwindow calculates noise mask;
#X obj 98 499 /~ 1536;
#X obj 144 256 tabreceive~ mask;
#X connect 0 0 9 0;
#X connect 1 0 16 1;
#X connect 2 0 11 1;
#X connect 3 0 7 0;
#X connect 4 0 8 1;
#X connect 5 0 3 0;
#X connect 6 0 8 0;
#X connect 7 0 6 0;
#X connect 7 0 10 0;
#X connect 7 0 10 1;
#X connect 7 1 4 0;
#X connect 7 1 2 0;
#X connect 7 1 2 1;
#X connect 8 0 0 0;
#X connect 10 0 11 0;
#X connect 11 0 16 0;
#X connect 11 0 22 0;
#X connect 11 0 31 0;
#X connect 12 0 1 1;
#X connect 13 0 18 0;
#X connect 16 0 17 0;
#X connect 17 0 13 0;
#X connect 18 0 35 0;
#X connect 20 0 3 1;
#X connect 21 0 0 1;
#X connect 24 0 25 0;
#X connect 31 0 13 1;
#X connect 35 0 6 1;
#X connect 35 0 4 1;
#X connect 36 0 1 0;
#X restore 198 443 pd fft-analysis;
#X obj 505 63 bng 15 250 50 0 empty empty empty 17 7 0 10 -262144 -1
-1;
#X obj 405 177 env~;
#X floatatom 405 199 5 0 0 0 - - -;
#X obj 445 261 *;
#N canvas 1150 142 592 442 mask-table 0;
#N canvas 0 22 450 300 (subpatch) 0;
#X array mask 512 float 1;
#A 0 206.855 212.66 223.917 259.582 291.256 328.06 298.948 232.923
177.579 141.631 108.922 115.204 156.481 185.116 245.175 302.458 362.875
427.193 499 499 493.447 428.489 429.872 399.85 416.025 457.546 457.898
445.919 428.923 371.741 289.314 265.793 198.108 205.491 168.817 92.025
93.3422 40.83 0 0 0 0 0 0 0 0 0 0 17.3987 121.217 173.168 231.668 280.136
313.784 302.072 298.235 350.259 380.054 350.617 285.797 298.588 311.179
278.928 235.997 229.486 171.077 140.561 95.1647 129.075 141.268 140.035
139.309 187.983 212.59 181.009 107.911 126.417 136.16 164.214 126.549
86.316 8.35236 26.0761 0 0 0 0 0 0 0 0 15.2902 13.4031 0 7.76084 54.3224
49.3197 74.4179 44.1896 63.8981 24.0129 68.396 86.0533 151.62 235.448
243.587 296.77 360.223 370.637 308.652 280.427 261.293 289.742 267.791
256.353 216.382 130.073 83.8486 110.753 89.6345 52.8486 27.4691 0 0
0 0 0 0 0 0 0 0 0 0 45.0848 121.316 180.302 250.862 334.754 321.791
367.486 394.357 385.011 332.458 290.959 265.35 190.992 103.03 53.8266
26.8294 48.5499 71.2878 76.5055 50.5265 33.5992 28.3679 43.2104 69.6147
149.294 178.104 226.355 233.176 213.511 140.333 86.1234 61.6837 98.0971
91.9537 99.0192 56.1043 0 0 0 0 11.6824 10.6182 14.6152 0 0 0 0 22.7428
133.051 254.703 277.346 347.704 363.715 392.196 424.198 409.92 393.745
334.36 261.753 214.741 227.586 239.293 296.71 370.677 465.048 463.897
417.735 426.432 460.422 474.979 478.658 440.168 376.777 283.113 156.72
118.352 93.8476 91.5538 41.7404 39.012 94.812 174.93 213.798 182.414
155.135 129.95 163.148 124.02 144.934 191.509 233.38 239.195 202.094
219.448 264.655 242.464 167.309 84.1056 0 0 0 0 0 0 0 0 0 0 0 4.27159
40.3642 44.864 91.5289 160.042 175.457 214.394 220.921 245.685 248.894
254.19 303.556 358.972 378.737 368.961 385.439 353.955 276.109 226.346
233.527 224.527 244.159 230.856 203.543 200.261 201.173 154.301 148.372
186.754 225.521 222.627 213.037 173.118 175.132 178.829 236.195 238.79
257.48 241.992 267.066 294.77 333.48 399.247 461.008 499 499 499 432.658
311.843 286.075 233.005 153.682 139.842 124.959 122.758 123.201 160.352
170.579 119.852 61.6138 0 0 0 0 0 0 0 0 0 11.1428 10.5555 7.51271 1.82291
0 0 0 0 0 0 0 0 0 0 0 0 0 0 22.852 39.8475 73.458 102.373 163.466 167.654
129.247 104.994 70.1237 11.5641 0 0 0 0 0 29.9431 111.443 114.646 171.078
235.066 211.096 232.684 224.146 203.211 241.414 197.678 191.825 169.692
156.701 202.934 188.986 119.093 47.629 2.27053 0 0 0 0 0 0 0 0 35.0217
78.4432 145.219 225.296 303.062 356.825 409.603 471.076 494.271 439.65
387.632 282.746 211.604 210.779 208.424 220.745 256.942 227.981 158.531
142.741 89.5475 109.599 89.3174 43.0115 39.5143 0 0 0 0 0 0 0 0 0 0
0 0 0 0 52.2178 81.8382 38.6582 64.0635 69.2453 113.287 124.471 115.885
83.2232 98.9599 42.2464 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 46.8849
120.972 186.838 160.592 135.361 98.6602 46.7227 38.3765 0 0 0 0 1.86913
0 0 0 0 0 0 0 0 0 0 0 0 0 0 46.6709 23.9214 42.0192 21.7635 0 0 0 0
0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0
0 0 0;
#X coords 0 500 511 0 400 300 1 0 0;
#X restore 100 71 graph;
#X text 22 -1 This table (1002-mask) is the average power measured
in each channel of the spectrum \, presumed to represent the noise
floor.;
#X msg 426 14 \; mask write mask2.txt;
#X restore 474 402 pd mask-table k;
#X obj 559 332 s mask;
#X msg 611 303 const 499;
#X msg 559 303 const 1;
#X obj 400 100 s fibi;
#X msg 684 302 const 250;
#X obj 647 359 hsl 128 15 0 500 0 1 empty empty empty -2 -8 0 10 -262144
-1 -1 200 1;
#X msg 618 334 const \$1;
#X obj 144 664 writesf~ 2;
#X obj 211 474 r onOff;
#X obj 211 520 sel 1 0;
#X msg 211 563 start;
#X msg 253 563 stop;
#X obj 211 543 t b b;
#X msg 263 592 open Mist_form_wip2.wav;
#N canvas 245 383 834 499 sequence 0;
#X obj 48 110 sel 1;
#X floatatom 93 282 10 0 0 0 - - -;
#X obj 48 48 inlet;
#X obj 93 332 outlet;
#X obj 140 47 inlet;
#X obj 197 28 r my_loadbang;
#X obj 197 95 s randF;
#X obj 248 95 s randI;
#X obj 274 11 bng 15 250 50 0 empty empty empty 17 7 0 10 -262144 -1
-1;
#X obj 197 50 random 100;
#X obj 197 72 / 100;
#X obj 205 388 tabwrite skiparray;
#X obj 310 271 r playback1;
#X obj 310 293 * 100;
#X obj 310 315 int;
#X floatatom 310 337 5 0 0 0 - - -;
#N canvas 0 22 450 300 westcoast 0;
#X obj 39 19 noise~;
#X obj 39 72 samphold~;
#X obj 39 94 threshold~ 0.3;
#X obj 39 133 outlet;
#X obj 106 50 phasor~;
#X obj 106 6 inlet;
#X obj 106 28 sig~;
#X obj 202 43 r randF;
#X obj 10 131 bng 15 250 50 0 empty empty empty 17 7 0 10 -262144 -1
-1;
#X msg 202 65 set \$1 1 0.1 1;
#X obj 23 46 bp~ 1000 10;
#X obj 146 140 r onOff;
#X obj 143 175 sel 1;
#X obj 143 218 f;
#X obj 170 218 - 1;
#X obj 188 169 r my_loadbang;
#X obj 143 240 pow 1;
#X floatatom 143 262 5 0 0 0 - - -;
#X msg 188 191 4;
#X connect 0 0 10 0;
#X connect 1 0 2 0;
#X connect 2 0 3 0;
#X connect 2 0 8 0;
#X connect 4 0 1 1;
#X connect 5 0 6 0;
#X connect 6 0 4 0;
#X connect 7 0 9 0;
#X connect 9 0 2 0;
#X connect 10 0 1 0;
#X connect 11 0 12 0;
#X connect 12 0 13 0;
#X connect 13 0 14 0;
#X connect 13 0 16 0;
#X connect 14 0 13 1;
#X connect 15 0 18 0;
#X connect 16 0 17 0;
#X connect 16 0 10 2;
#X connect 18 0 13 0;
#X restore 199 296 pd westcoast;
#X obj 199 316 bng 15 250 50 0 empty empty empty 17 7 0 10 -262144
-1 -1;
#X obj 199 336 random 2;
#X floatatom 169 390 5 0 0 0 - - -;
#X floatatom 304 80 5 0 0 0 - - -;
#X obj 393 64 r my_loadbang;
#X obj 93 306 pow 2;
#X obj 199 358 spigot;
#X obj 255 336 r onOff;
#X obj 260 366 tgl 15 0 empty empty empty 17 7 0 10 -262144 -1 -1 0
1;
#X floatatom 125 240 5 0 0 0 - - -;
#X obj 170 238 print playcount;
#X obj 98 260 tabread fibsequence;
#N canvas 1046 398 676 473 fibstore 0;
#N canvas 0 22 450 278 (subpatch) 0;
#X array fibsequence 47 float 2;
#X coords 0 255 47 0 200 140 1 0 0;
#X restore 98 74 graph;
#N canvas 0 22 450 278 (subpatch) 0;
#X array playcont 1 float 2;
#X coords 0 40 1 0 200 140 1 0 0;
#X restore 218 -73 graph;
#N canvas 0 22 450 278 (subpatch) 0;
#X array testarray 10 float 3;
#A 0 0 -0.742862 -0.71429 -0.457146 0 0.285716 0.357145 0.0571432 -0.757148
-0.685719;
#X coords 0 1 10 -1 200 140 1 0 0;
#X restore 424 10 graph;
#X restore 372 43 pd fibstore;
#X msg 402 169 \; fibsequence read fibo.txt;
#X obj 125 175 f;
#X obj 152 175 + 1;
#X msg 140 144 0;
#X obj 170 216 tabwrite playcont;
#X obj 210 158 tabread playcont;
#X obj 210 116 r my_loadbang;
#X msg 296 216 \; playcont write play.txt;
#X obj 252 187 t b f;
#X obj 438 280 print playcont_write;
#X obj 432 364 print playcount_on_load;
#X obj 436 335 tabread playcont;
#X obj 395 95 t b b b;
#X msg 423 311 0;
#X text 468 315 mark testing;
#X obj 606 63 r fibCountFromXcode;
#X text 499 39 this should happen write after the patch is loaded;
#X obj 680 187 tabwrite playcont;
#X text 241 130 changed to zero - array is only that size;
#X obj 611 223 print playcontFromXcode;
#X text 485 234 send to xcode;
#X msg 486 216 0;
#X msg 429 133 \; playcont read play.txt;
#X msg 209 137 0;
#X msg 759 142 0;
#X obj 685 103 t b f f b;
#X obj 592 132 s my_loadbang;
#X obj 467 254 s play_cont_write_file2;
#X connect 0 0 31 0;
#X connect 1 0 22 0;
#X connect 1 0 16 0;
#X connect 2 0 0 0;
#X connect 4 0 33 0;
#X connect 4 0 1 0;
#X connect 5 0 9 0;
#X connect 8 0 9 0;
#X connect 9 0 7 0;
#X connect 9 0 10 0;
#X connect 9 0 20 0;
#X connect 10 0 6 0;
#X connect 12 0 13 0;
#X connect 13 0 14 0;
#X connect 14 0 15 0;
#X connect 15 0 11 1;
#X connect 16 0 17 0;
#X connect 17 0 18 0;
#X connect 18 0 19 0;
#X connect 18 0 23 0;
#X connect 21 0 42 0;
#X connect 22 0 3 0;
#X connect 23 0 11 0;
#X connect 24 0 25 0;
#X connect 24 0 23 1;
#X connect 26 0 28 0;
#X connect 28 0 1 0;
#X connect 31 0 32 0;
#X connect 31 0 26 0;
#X connect 31 0 27 0;
#X connect 31 0 38 0;
#X connect 32 0 31 1;
#X connect 33 0 31 1;
#X connect 35 0 31 1;
#X connect 36 0 53 0;
#X connect 38 0 37 0;
#X connect 38 0 39 0;
#X connect 38 1 34 0;
#X connect 38 1 57 0;
#X connect 41 0 40 0;
#X connect 42 0 43 0;
#X connect 42 1 30 0;
#X connect 42 2 52 0;
#X connect 43 0 41 0;
#X connect 45 0 55 0;
#X connect 51 0 57 0;
#X connect 53 0 35 0;
#X connect 54 0 47 1;
#X connect 55 0 56 0;
#X connect 55 1 49 0;
#X connect 55 2 47 0;
#X connect 55 3 54 0;
#X restore 400 78 pd sequence;
#X obj 400 56 r onOff;
#X obj 460 236 r fibi;
#N canvas 742 174 752 592 audio 1;
#X obj 1 23 inlet;
#X obj 49 538 outlet~;
#X obj 170 539 outlet~;
#X msg -14 142 0;
#X obj 52 325 *~;
#X obj 160 246 r fileLenSamps;
#X obj 1 76 sel 1 0;
#X obj 503 202 soundfiler;
#X floatatom 503 262 12 0 0 0 - - -;
#X obj 504 234 / 44100;
#N canvas 552 305 925 542 arrays 0;
#N canvas 0 22 450 278 (subpatch) 0;
#X array fileL 282660 float 0;
#X coords 0 1 282659 -1 200 140 1 0 0;
#X restore 97 0 graph;
#N canvas 0 22 450 278 (subpatch) 0;
#X array fileR 282660 float 0;
#X coords 0 1 282659 -1 200 140 1 0 0;
#X restore 108 240 graph;
#X restore 611 71 pd arrays;
#X obj 555 234 s fileLenSamps;
#X obj 617 269 r fileLenSamps;
#X obj 617 319 s playbackRate;
#X obj 617 293 expr 44100 / $f1;
#X obj 448 46 r my_loadbang;
#X obj 529 26 bng 15 250 50 0 empty empty empty 17 7 0 10 -262144 -1
-1;
#X obj 283 317 tgl 15 0 empty empty empty 17 7 0 10 -262144 -1 -1 0
1;
#X obj 283 359 snapshot~;
#X floatatom 283 440 10 0 0 0 - - -;
#X obj 373 483 hsl 195 15 0 1 0 1 empty empty empty -2 -8 0 10 -262144
-1 -1 19399 1;
#X text 369 500 Playback position;
#X obj 283 481 s playback1;
#X text 550 25 reset buffer;
#X obj 141 148 r playback;
#X obj 283 337 metro 1;
#X obj 373 429 sel 1;
#X obj 373 458 s stop;
#X msg 308 139 read -maxsize 7.938e+06 -resize testAudio_Stereo.aiff
fileL fileR;
#X obj 52 296 line~;
#X obj 80 167 t f f;
#X obj 80 189 expr 1 - $f1;
#X obj 80 213 *;
#X obj 80 238 / 44.1;
#X msg 80 261 1 \$1;
#X msg 36 142 0;
#X msg 27 249 stop;
#X obj 302 316 r onOff;
#X obj 421 458 print stopForEnd;
#X msg 380 95 read -maxsize 8.99172e+06 -resize wisper.wav fileL fileR
;
#X obj 52 421 tabplay~ fileL;
#X obj 171 421 tabplay~ fileR;
#X msg 120 386 \$1;
#X obj 121 343 f;
#X obj 121 365 *;
#X obj 178 192 t b;
#X obj 120 474 s stop;
#X obj 189 477 s file2PlayEnd;
#X obj 250 517 print file2playend;
#X connect 0 0 6 0;
#X connect 3 0 30 0;
#X connect 3 0 40 0;
#X connect 3 0 41 0;
#X connect 5 0 4 1;
#X connect 5 0 32 1;
#X connect 5 0 44 1;
#X connect 6 0 3 0;
#X connect 6 1 35 0;
#X connect 7 0 9 0;
#X connect 7 0 11 0;
#X connect 9 0 8 0;
#X connect 12 0 14 0;
#X connect 14 0 13 0;
#X connect 15 0 28 0;
#X connect 17 0 25 0;
#X connect 18 0 19 0;
#X connect 18 0 43 1;
#X connect 19 0 20 0;
#X connect 19 0 22 0;
#X connect 24 0 30 0;
#X connect 24 0 45 0;
#X connect 25 0 18 0;
#X connect 26 0 38 0;
#X connect 26 0 27 0;
#X connect 28 0 7 0;
#X connect 29 0 4 0;
#X connect 29 0 18 0;
#X connect 30 0 31 0;
#X connect 30 1 29 0;
#X connect 31 0 32 0;
#X connect 32 0 33 0;
#X connect 33 0 34 0;
#X connect 34 0 29 0;
#X connect 35 0 36 0;
#X connect 36 0 29 0;
#X connect 36 0 40 0;
#X connect 36 0 41 0;
#X connect 37 0 17 0;
#X connect 39 0 7 0;
#X connect 40 0 1 0;
#X connect 40 1 46 0;
#X connect 40 1 47 0;
#X connect 40 1 48 0;
#X connect 41 0 2 0;
#X connect 42 0 40 0;
#X connect 42 0 41 0;
#X connect 43 0 44 0;
#X connect 44 0 42 0;
#X connect 45 0 43 0;
#X restore 79 134 pd audio;
#N canvas 221 315 481 385 Skip 0;
#X obj 9 16 inlet~;
#X obj 22 355 s playback;
#X obj 9 43 env~;
#X floatatom 9 69 5 0 0 0 - - -;
#X obj 9 148 bng 15 250 50 0 empty empty empty 17 7 0 10 -262144 -1
-1;
#X obj 9 123 sel 1;
#X obj 9 98 > 92;
#X floatatom 48 69 5 0 0 0 - - -;
#X obj 90 245 t b b;
#X msg 48 43 88;
#X msg 77 43 95;
#X obj 90 269 f;
#X obj 90 334 +;
#X floatatom 90 357 10 0 0 0 - - -;
#X floatatom 117 334 10 0 0 0 - - -;
#X obj 117 291 - 5;
#X obj 135 245 r playback1;
#X obj 117 269 random 10;
#X obj 117 313 / 1000;
#X obj 115 20 inlet;
#X text 157 21 Threshold;
#X obj 116 197 threshold~ 100 100;
#X obj 116 224 bng 15 250 50 0 empty empty empty 17 7 0 10 -262144
-1 -1;
#X floatatom 115 46 5 0 0 0 - - -;
#X obj 222 222 bng 15 250 50 0 empty empty empty 17 7 0 10 -262144
-1 -1;
#X msg 22 323 0;
#X text 54 123 old way;
#X text 58 202 new way;
#X msg 115 74 set \$1 20 \$1 100;
#N canvas 0 22 450 300 skipar 0;
#N canvas 0 22 450 278 (subpatch) 0;
#X array skiparray 100 float 3;
#A 0 0 0 0 0 0 0 0 0 0 0 0 0 1 0 0 0 0 0 0 1 0 0 0 0 0 0 0 0 0 0 0
1 0 0 0 0 0 0 0 0 0 0 0 1 0 0 0 0 0 0 0 0 0 1 0 0 0 0 0 0 0 0 0 0 0
0 1 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 0 0 0 0
0;
#X coords 0 1 99 0 200 140 1 0 0;
#X restore 123 60 graph;
#X restore 324 18 pd skipar;
#X obj 248 116 tabread skiparray;
#X obj 248 26 r playback1;
#X obj 248 48 * 100;
#X obj 248 70 int;
#X obj 248 142 sel 0 1;
#X msg 116 160 set 100 100 100 100;
#X msg 262 181 set 70 20 70 100;
#X obj 318 46 r fibi;
#X obj 318 68 >= 1;
#X obj 249 93 spigot;
#X obj 298 95 tgl 15 0 empty empty empty 17 7 0 10 -262144 -1 -1 0
1;
#X obj 328 154 s skip;
#X connect 0 0 2 0;
#X connect 2 0 3 0;
#X connect 3 0 6 0;
#X connect 3 0 21 0;
#X connect 5 0 4 0;
#X connect 6 0 5 0;
#X connect 7 0 6 1;
#X connect 8 0 11 0;
#X connect 8 1 17 0;
#X connect 9 0 7 0;
#X connect 10 0 7 0;
#X connect 11 0 12 0;
#X connect 12 0 13 0;
#X connect 12 0 1 0;
#X connect 15 0 18 0;
#X connect 16 0 11 1;
#X connect 17 0 15 0;
#X connect 18 0 14 0;
#X connect 18 0 12 1;
#X connect 19 0 23 0;
#X connect 21 0 22 0;
#X connect 21 1 24 0;
#X connect 22 0 8 0;
#X connect 23 0 28 0;
#X connect 25 0 1 0;
#X connect 28 0 35 0;
#X connect 30 0 34 0;
#X connect 30 0 41 0;
#X connect 31 0 32 0;
#X connect 32 0 33 0;
#X connect 33 0 39 0;
#X connect 34 0 35 0;
#X connect 34 1 36 0;
#X connect 35 0 21 0;
#X connect 36 0 21 0;
#X connect 37 0 38 0;
#X connect 38 0 40 0;
#X connect 39 0 30 0;
#X connect 40 0 39 1;
#X restore 219 191 pd Skip;
#N canvas 0 22 450 300 noise 0;
#X obj 168 193 *~;
#X obj 158 49 noise~;
#X obj 190 167 dbtorms;
#X floatatom 189 149 5 0 100 0 - - -;
#X obj 88 47 r onOff;
#X obj 158 117 *~;
#X obj 206 49 r fibi;
#X obj 168 215 outlet~;
#X obj 158 83 bp~ 1000 2;
#X obj 292 69 r skip;
#X obj 292 91 sel 0 1;
#X obj 281 224 line;
#X floatatom 281 246 5 0 0 0 - - -;
#X msg 279 174 \$1;
#X obj 279 127 f;
#X obj 280 31 r my_loadbang;
#X msg 273 200 \$1 1000;
#X obj 341 138 + 20;
#X msg 312 176 \$1;
#X obj 309 148 f;
#X obj 206 102 clip 0 79;
#X connect 0 0 7 0;
#X connect 1 0 8 0;
#X connect 2 0 0 1;
#X connect 3 0 2 0;
#X connect 4 0 5 1;
#X connect 5 0 0 0;
#X connect 6 0 20 0;
#X connect 8 0 5 0;
#X connect 9 0 10 0;
#X connect 10 0 14 0;
#X connect 10 1 19 0;
#X connect 11 0 12 0;
#X connect 11 0 3 0;
#X connect 13 0 16 0;
#X connect 14 0 13 0;
#X connect 15 0 14 0;
#X connect 16 0 11 0;
#X connect 17 0 19 1;
#X connect 18 0 16 0;
#X connect 19 0 18 0;
#X connect 20 0 14 1;
#X connect 20 0 17 0;
#X restore 312 291 pd noise;
#X obj 211 496 spigot;
#X obj 261 496 tgl 15 0 empty empty empty 17 7 0 10 -262144 -1 -1 0
1;
#X text 279 496 keep off till new parts implimented;
#N canvas 892 22 802 888 grains 0;
#X obj 3 2 inlet~;
#X obj 219 851 outlet~;
#X obj 57 415 phasor~;
#X obj 58 595 *~ -1;
#X obj 58 620 +~ 1;
#X obj 114 737 sig~ 1;
#X obj 146 770 cos~;
#X obj 114 770 -~;
#X obj 114 795 *~ 0.5;
#X obj 58 796 *~;
#X obj 76 682 samphold~;
#X obj 58 709 *~;
#X obj 77 654 sig~;
#X floatatom 167 394 5 0 0 0 - - -;
#X floatatom 120 274 10 0 0 0 - - -;
#X floatatom 89 377 5 0 0 0 - - -;
#X obj 167 368 / 44.1;
#X obj 319 576 *~ -1;
#X obj 319 609 +~ 1;
#X obj 404 773 cos~;
#X obj 374 772 -~;
#X obj 374 797 *~ 0.5;
#X obj 318 793 *~;
#X obj 337 677 samphold~;
#X obj 319 701 *~;
#X obj 337 649 sig~;
#X obj 319 490 +~ 0.5;
#X obj 319 512 wrap~;
#X obj 120 338 expr (pow(2 \, ($f2/12)) - 1) * (44100/$f1);
#X text 190 769 another way to;
#X text 164 795 make a Hanning window;
#X obj 119 97 inlet;
#X obj 273 63 inlet;
#X obj 383 542 *~ 44100;
#X obj 121 581 tabread~ taaab;
#X floatatom 370 460 5 0 0 0 - - -;
#X obj 378 382 r my_loadbang;
#X msg 51 229 5750.39;
#X obj 48 187 r my_loadbang;
#X obj 374 741 sig~ 1;
#X obj 129 552 *~ 44100;
#X obj 380 437 / 100;
#X obj 380 412 random 5;
#X obj 4 65 delwrite~ b2 500;
#X obj 58 752 vd~ b2;
#X obj 319 744 vd~ b2;
#X obj 333 410 r fibi;
#X obj 331 842 s~ feedbackr;
#X obj 100 12 r~ feedbackr;
#X obj 100 34 *~;
#X obj 185 12 r fibi;
#X obj 185 34 / 100;
#X obj 185 56 clip 0 0.6;
#X obj 394 619 tabread~ taaab;
#X connect 0 0 43 0;
#X connect 2 0 3 0;
#X connect 2 0 6 0;
#X connect 2 0 26 0;
#X connect 2 0 10 1;
#X connect 2 0 40 0;
#X connect 3 0 4 0;
#X connect 4 0 11 0;
#X connect 5 0 7 0;
#X connect 6 0 7 1;
#X connect 7 0 8 0;
#X connect 9 0 1 0;
#X connect 10 0 11 1;
#X connect 11 0 44 0;
#X connect 12 0 10 0;
#X connect 13 0 25 0;
#X connect 13 0 12 0;
#X connect 14 0 28 0;
#X connect 14 0 16 0;
#X connect 15 0 2 0;
#X connect 16 0 13 0;
#X connect 17 0 18 0;
#X connect 18 0 24 0;
#X connect 19 0 20 1;
#X connect 20 0 21 0;
#X connect 22 0 1 0;
#X connect 22 0 47 0;
#X connect 23 0 24 1;
#X connect 24 0 45 0;
#X connect 25 0 23 0;
#X connect 26 0 27 0;
#X connect 27 0 17 0;
#X connect 27 0 19 0;
#X connect 27 0 33 0;
#X connect 27 0 23 1;
#X connect 28 0 15 0;
#X connect 31 0 14 0;
#X connect 32 0 28 1;
#X connect 33 0 53 0;
#X connect 34 0 9 1;
#X connect 35 0 26 1;
#X connect 36 0 42 0;
#X connect 37 0 14 0;
#X connect 38 0 37 0;
#X connect 39 0 20 0;
#X connect 40 0 34 0;
#X connect 41 0 35 0;
#X connect 42 0 41 0;
#X connect 44 0 9 0;
#X connect 45 0 22 0;
#X connect 48 0 49 0;
#X connect 49 0 43 0;
#X connect 50 0 51 0;
#X connect 51 0 52 0;
#X connect 52 0 49 1;
#X connect 53 0 22 1;
#X restore 198 360 pd grains;
#N canvas 204 22 802 888 grains 0;
#X obj 3 2 inlet~;
#X obj 219 851 outlet~;
#X obj 58 752 vd~ b1;
#X obj 57 415 phasor~;
#X obj 58 595 *~ -1;
#X obj 58 620 +~ 1;
#X obj 114 737 sig~ 1;
#X obj 146 770 cos~;
#X obj 114 770 -~;
#X obj 114 795 *~ 0.5;
#X obj 58 796 *~;
#X obj 76 682 samphold~;
#X obj 58 709 *~;
#X obj 77 654 sig~;
#X floatatom 167 394 5 0 0 0 - - -;
#X floatatom 120 274 10 0 0 0 - - -;
#X floatatom 89 377 5 0 0 0 - - -;
#X obj 167 368 / 44.1;
#X obj 319 744 vd~ b1;
#X obj 319 576 *~ -1;
#X obj 319 609 +~ 1;
#X obj 404 773 cos~;
#X obj 374 772 -~;
#X obj 374 797 *~ 0.5;
#X obj 318 793 *~;
#X obj 337 677 samphold~;
#X obj 319 701 *~;
#X obj 337 649 sig~;
#X obj 319 512 wrap~;
#X obj 120 338 expr (pow(2 \, ($f2/12)) - 1) * (44100/$f1);
#X text 190 769 another way to;
#X text 164 795 make a Hanning window;
#X obj 119 97 inlet;
#X obj 273 63 inlet;
#N canvas 0 22 450 278 (subpatch) 0;
#X array taaab 100 float 1;
#A 0 0.0642857 0.121429 0.128572 0.15 0.164286 0.157143 0.164285 0.171428
0.171428 0.178571 0.185714 0.185714 0.192857 0.207142 0.221428 0.221428
0.22857 0.242856 0.249999 0.264284 0.27857 0.285713 0.292856 0.307141
0.314284 0.328569 0.342855 0.349998 0.342857 0.342857 0.342857 0.346429
0.35 0.357143 0.364285 0.364285 0.371428 0.371428 0.378571 0.385714
0.385714 0.385714 0.385714 0.385714 0.385714 0.385714 0.385714 0.385714
0.385714 0.385714 0.385714 0.385714 0.385714 0.385714 0.385714 0.385714
0.385714 0.385714 0.399999 0.399999 0.399999 0.399999 0.392857 0.385714
0.371428 0.371428 0.364285 0.364285 0.364285 0.364285 0.364285 0.364285
0.364285 0.364285 0.364285 0.357143 0.342857 0.335714 0.328572 0.328572
0.321429 0.307143 0.3 0.292858 0.285715 0.278572 0.264287 0.242858
0.235715 0.22143 0.214287 0.192859 0.185716 0.178573 0.17143 0.157145
0.157145 0.150002 0.150002 0.0928568;
#X coords 0 1 100 0 200 140 1 0 0;
#X restore 533 166 graph;
#X obj 383 542 *~ 44100;
#X obj 376 571 tabread~ taaab;
#X obj 121 581 tabread~ taaab;
#X floatatom 370 460 5 0 0 0 - - -;
#X obj 379 354 r my_loadbang;
#X msg 51 229 5750.39;
#X obj 48 187 r my_loadbang;
#X obj 374 741 sig~ 1;
#X obj 4 65 delwrite~ b1 500;
#X obj 129 552 *~ 44100;
#X obj 319 490 +~ 0;
#X obj 370 435 / 100;
#X obj 321 416 r fibi;
#X obj 381 384 random 10;
#X obj 381 406 - 5;
#X obj 321 438 / 100;
#X obj 334 467 +;
#X obj 100 34 *~;
#X obj 185 12 r fibi;
#X obj 185 56 clip 0 0.6;
#X obj 342 847 s~ feedbackl;
#X obj 97 11 r~ feedbackl;
#X floatatom 185 78 5 0 0 0 - - -;
#X obj 185 34 / 100;
#X connect 0 0 43 0;
#X connect 2 0 10 0;
#X connect 3 0 4 0;
#X connect 3 0 7 0;
#X connect 3 0 11 1;
#X connect 3 0 44 0;
#X connect 3 0 45 0;
#X connect 4 0 5 0;
#X connect 5 0 12 0;
#X connect 6 0 8 0;
#X connect 7 0 8 1;
#X connect 8 0 9 0;
#X connect 10 0 1 0;
#X connect 11 0 12 1;
#X connect 12 0 2 0;
#X connect 13 0 11 0;
#X connect 14 0 27 0;
#X connect 14 0 13 0;
#X connect 15 0 29 0;
#X connect 15 0 17 0;
#X connect 16 0 3 0;
#X connect 17 0 14 0;
#X connect 18 0 24 0;
#X connect 19 0 20 0;
#X connect 20 0 26 0;
#X connect 21 0 22 1;
#X connect 22 0 23 0;
#X connect 24 0 1 0;
#X connect 24 0 55 0;
#X connect 25 0 26 1;
#X connect 26 0 18 0;
#X connect 27 0 25 0;
#X connect 28 0 19 0;
#X connect 28 0 21 0;
#X connect 28 0 35 0;
#X connect 28 0 25 1;
#X connect 29 0 16 0;
#X connect 32 0 15 0;
#X connect 33 0 29 1;
#X connect 35 0 36 0;
#X connect 36 0 24 1;
#X connect 37 0 10 1;
#X connect 38 0 51 1;
#X connect 39 0 48 0;
#X connect 40 0 15 0;
#X connect 41 0 40 0;
#X connect 42 0 22 0;
#X connect 44 0 37 0;
#X connect 45 0 28 0;
#X connect 46 0 38 0;
#X connect 47 0 50 0;
#X connect 48 0 49 0;
#X connect 49 0 46 0;
#X connect 50 0 51 0;
#X connect 51 0 45 1;
#X connect 52 0 43 0;
#X connect 53 0 58 0;
#X connect 54 0 52 1;
#X connect 54 0 57 0;
#X connect 56 0 52 0;
#X connect 58 0 54 0;
#X restore 78 359 pd grains;
#X floatatom 739 679 5 0 0 0 - - -;
#X obj 739 700 t b f;
#X obj 691 516 vsl 15 128 100 30000 0 0 empty empty empty 0 -8 0 8
-262144 -1 -1 6360 1;
#X obj 690 674 t b f;
#X obj 739 599 vsl 15 73 -36 36 0 0 empty empty empty 0 -8 0 8 -262144
-1 -1 3600 1;
#X text 756 663 -36;
#X text 708 633 100;
#X obj 681 729 s gsize;
#X obj 738 732 s pitch;
#X obj 103 311 r gsize;
#X obj 129 335 r pitch;
#X obj 223 307 r gsize;
#X obj 249 330 r pitch;
#X obj 739 574 expr 1 - ($f1 + 1);
#X obj 739 508 r fibi;
#X obj 641 439 r fibi;
#X floatatom 641 512 5 0 0 0 - - -;
#X obj 739 530 / 10;
#X obj 519 116 s skiparray;
#X msg 523 83 const 0;
#X obj 78 331 +~;
#X obj 198 331 +~;
#X obj 684 454 r randI;
#X obj 641 461 -;
#X obj 638 651 max 500;
#X obj 768 314 tabwrite~ mask;
#X obj 858 152 bng 15 250 50 0 empty empty empty 17 7 0 10 -262144
-1 -1;
#X obj 774 276 *~ 499;
#X obj 774 254 clip~ 0 1;
#X obj 855 198 noise~;
#X msg 809 185 0;
#X obj 760 230 *~ 0.5;
#X obj 851 116 r my_loadbang;
#X obj 905 167 r randI;
#X obj 878 220 bp~ 200 0.5;
#X obj 905 189 * 10;
#X obj 405 235 / 100000;
#X obj 785 508 r randF;
#X obj 739 552 +;
#X obj 789 540 spigot;
#X obj 893 540 r fibi;
#X obj 839 541 tgl 15 0 empty empty empty 17 7 0 10 -262144 -1 -1 0
1;
#X obj 865 540 > 0;
#X obj 59 20 r play;
#X obj 109 20 r stop;
#X msg 59 42 1;
#X msg 109 42 0;
#X text 529 62 reset;
#X obj 593 116 s fibstore;
#X obj 350 632 r my_loadbang;
#X obj 363 678 t b b;
#X msg 359 714 \; testarray write testing.txt;
#X obj 240 728 print wrote_test;
#X obj 669 46 s my_loadbang;
#X obj 669 17 loadbang;
#X obj 643 23 bng 15 250 50 0 empty empty empty 17 7 0 10 -262144 -1
-1;
#X obj 760 206 osc~ 28;
#X obj 641 489 expr 15000 - $f1;
#X obj 281 132 print onOffReceive;
#X connect 0 0 1 0;
#X connect 3 0 35 0;
#X connect 4 0 7 0;
#X connect 5 0 25 0;
#X connect 5 0 2 0;
#X connect 9 0 4 0;
#X connect 12 0 25 1;
#X connect 12 0 2 1;
#X connect 13 0 9 0;
#X connect 13 0 32 1;
#X connect 13 0 62 0;
#X connect 14 0 15 0;
#X connect 15 0 79 0;
#X connect 16 0 4 0;
#X connect 19 0 18 0;
#X connect 20 0 18 0;
#X connect 22 0 18 0;
#X connect 23 0 24 0;
#X connect 24 0 18 0;
#X connect 26 0 38 0;
#X connect 27 0 30 0;
#X connect 27 1 29 0;
#X connect 28 0 25 0;
#X connect 29 0 25 0;
#X connect 30 0 28 0;
#X connect 30 1 31 0;
#X connect 31 0 25 0;
#X connect 32 0 21 0;
#X connect 33 0 32 0;
#X connect 33 0 101 0;
#X connect 34 0 16 1;
#X connect 35 0 14 0;
#X connect 35 0 36 0;
#X connect 35 0 63 0;
#X connect 35 1 64 0;
#X connect 37 0 64 1;
#X connect 37 0 63 1;
#X connect 38 0 27 0;
#X connect 39 0 38 1;
#X connect 41 0 12 0;
#X connect 42 0 5 0;
#X connect 43 0 44 0;
#X connect 44 0 50 0;
#X connect 44 1 51 0;
#X connect 45 0 67 0;
#X connect 46 0 43 0;
#X connect 46 1 50 0;
#X connect 47 0 43 0;
#X connect 52 0 42 1;
#X connect 53 0 42 2;
#X connect 54 0 41 1;
#X connect 55 0 41 2;
#X connect 56 0 47 0;
#X connect 57 0 60 0;
#X connect 58 0 66 0;
#X connect 60 0 81 0;
#X connect 62 0 61 0;
#X connect 62 0 91 0;
#X connect 63 0 42 0;
#X connect 64 0 41 0;
#X connect 65 0 66 1;
#X connect 66 0 100 0;
#X connect 67 0 46 0;
#X connect 69 0 68 0;
#X connect 69 0 73 0;
#X connect 70 0 68 0;
#X connect 71 0 70 0;
#X connect 72 0 77 0;
#X connect 73 0 99 1;
#X connect 74 0 71 0;
#X connect 75 0 69 0;
#X connect 76 0 78 0;
#X connect 77 0 71 0;
#X connect 78 0 77 1;
#X connect 79 0 16 0;
#X connect 80 0 82 0;
#X connect 81 0 56 0;
#X connect 82 0 81 1;
#X connect 83 0 85 0;
#X connect 84 0 82 1;
#X connect 85 0 84 0;
#X connect 86 0 88 0;
#X connect 87 0 89 0;
#X connect 88 0 0 0;
#X connect 89 0 0 0;
#X connect 92 0 93 0;
#X connect 93 0 95 0;
#X connect 93 1 94 0;
#X connect 98 0 96 0;
#X connect 99 0 74 0;
#X connect 100 0 45 0;
#X connect 100 0 59 0;
